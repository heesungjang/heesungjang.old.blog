{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/list-prime-number/",
    "result": {"data":{"cur":{"id":"08a4ad2e-e059-5570-bf26-e04017fe5d65","html":"<h1 id=\"1문제\" style=\"position:relative;\"><a href=\"#1%EB%AC%B8%EC%A0%9C\" aria-label=\"1문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.문제</h1>\n<p>정수를 입력 했을 때, <strong>그 정수 이하의 소수를 모두 반환하시오</strong>. 소수는 자신보다 작은 두 개의 자연수를 곱하여 만들 수 없는 1보다 큰 자연수이다.</p>\n<blockquote>\n<p>Input = 20</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">>>>[2, 3, 5, 7, 11, 13, 17, 19]</code></pre></div>\n<h2 id=\"접근법\" style=\"position:relative;\"><a href=\"#%EC%A0%91%EA%B7%BC%EB%B2%95\" aria-label=\"접근법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>접근법:</h2>\n<ol>\n<li>\n<p><strong>소수는 자기와 1외에는 나눌 수 없다</strong>.</p>\n</li>\n<li>\n<p><strong>소수는 2부터 n - 1까지 어떤 소수로도 나누어 떨어지지 않는다</strong>.\n(소수인지 확인하고자 하는 수가 n 일때, n이 2와3으로 나누어 떨어지지 않는다면 2x2인 4와 2x3인 6으로도 나누어 떨어지지 않는다.)</p>\n</li>\n<li>\n<p><strong>n의 제좁근 이하의 어떤 소수로도 나누어 떨어지지 않는다</strong>.</p>\n</li>\n</ol>\n<h2 id=\"풀이법\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4%EB%B2%95\" aria-label=\"풀이법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이법:</h2>\n<h3 id=\"python-code\" style=\"position:relative;\"><a href=\"#python-code\" aria-label=\"python code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>python code:</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">find_prime_list_under_number</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prime_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> number <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> prime_list<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            prime_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> prime_list\n</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%A0%91%EA%B7%BC%EB%B2%95\">접근법:</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%92%80%EC%9D%B4%EB%B2%95\">풀이법:</a></p>\n<ul>\n<li><a href=\"#python-code\">python code:</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"1.문제 정수를 입력 했을 때, 그 정수 이하의 소수를 모두 반환하시오. 소수는 자신보다 작은 두 개의 자연수를 곱하여 만들 수 없는 1보다 큰 자연수이다. Input = 20 접근법: 소수는 자기와 1외에는 나눌 수 없다. 소수는 2부터 n - 1까지 어떤 소수로도 나누어 떨어지지 않는다.\n(소수인지 확인하고자 하는 수가 n 일때, n이 2와3으로 나누어 떨어지지 않는다면 2x2인 4와 2x3인 6으로도 나누어 떨어지지 않는다.) n의 제좁근 이하의 어떤 소수로도 나누어 떨어지지 않는다. 풀이법: python code: 접근법: 풀이법: python code:","frontmatter":{"date":"June 14, 2021","title":"소수 나열하기 [알고리즘]","categories":"알고리즘","author":"장희성","emoji":"✏️"},"fields":{"slug":"/list-prime-number/"}},"next":null,"prev":{"id":"0f9e9d50-471c-5a96-85e7-eeda71495301","html":"<h1 id=\"1-문제\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C\" aria-label=\"1 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제</h1>\n<p>0과 1로만 이루어진 문자열이 주어졌을 때, 이 문자를 모두 0, 혹은 모두 1로 같게 만들어야 한다. 할 수 있는 행동은 연속된 하나의 숫자를 잡고 모두 뒤집는 것 이다. 뒤는 것은 1을 0으로, 0을 1로 바꾸는 것을 의미한다. <strong>주어진 문자열을 모두 0 혹은 모두 1로 같게 만드는 최소 횟수를 반환하시오.</strong></p>\n<h2 id=\"예제\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C\" aria-label=\"예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제:</h2>\n<p>예를 들어 S=0001100 일 때,</p>\n<ol>\n<li>\n<p>전체를 뒤집으면 1110011이 된다.</p>\n</li>\n<li>\n<p>4번째 문자부터 5번째 문자까지 뒤집으면 1111111이 되어서 2번 만에 모두 같은 숫자로 만들 수 있다.</p>\n</li>\n<li>\n<p>하지만, 처음부터 4번째 문자부터 5번째 문자까지 문자를 뒤집으면 한 번에 0000000이 되어서 1번 만에 모두 같은 숫자로 만들 수 있다.</p>\n</li>\n</ol>\n<h2 id=\"접근법\" style=\"position:relative;\"><a href=\"#%EC%A0%91%EA%B7%BC%EB%B2%95\" aria-label=\"접근법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>접근법:</h2>\n<blockquote>\n<ol>\n<li>00011000에서 연속된 하나의 숫자, 즉 연속된 문자열들을 하나의 집합으로 구분하여 생각하자.</li>\n<li>예를들어, 00011000은 000 11 000 이렇게 구간별로 나눌 수 있다.</li>\n<li>따라서 이 경우에 1이 나오는 구간의 문자열들을 뒤집어주면 최소 횟수로 모든 숫자를 같게 만들 수 있다.</li>\n</ol>\n</blockquote>\n<h2 id=\"풀이법\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4%EB%B2%95\" aria-label=\"풀이법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이법:</h2>\n<h4 id=\"그렇다면-어떻게-구간을-나누고-뒤집는-횟수를-카운트할-수-있을까\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B5%AC%EA%B0%84%EC%9D%84-%EB%82%98%EB%88%84%EA%B3%A0-%EB%92%A4%EC%A7%91%EB%8A%94-%ED%9A%9F%EC%88%98%EB%A5%BC-%EC%B9%B4%EC%9A%B4%ED%8A%B8%ED%95%A0-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-label=\"그렇다면 어떻게 구간을 나누고 뒤집는 횟수를 카운트할 수 있을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그렇다면 어떻게 구간을 나누고, 뒤집는 횟수를 카운트할 수 있을까?</h4>\n<blockquote>\n<ol>\n<li>for문으로 문자열 내의 원소를 앞뒤로 비교하고,</li>\n<li>현재 원소와 다음에 오는 원소의 값이 같이 않다면, 새로운 구간이 시작되는 부분이고 만약 새로 시작하는 구간의 문자열이 1이라면, <strong>전체 문자열을 0으로 변경하기 위해 뒤집어야 하는 구간</strong>이기 때문에 count_to_all_zero에 +1을 해준다.</li>\n<li>반대로 새로운 구간의 문자열이 0이라면 count_to_all_one에 1+을 해준다.</li>\n<li>마지막으로 둘의 카운트를 비교하여 최소값을 반환한다.</li>\n</ol>\n</blockquote>\n<h3 id=\"python-code\" style=\"position:relative;\"><a href=\"#python-code\" aria-label=\"python code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>python code:</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">find_count_to_turn_out_to_all_zero_or_all_one</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    count_to_all_zero <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    count_to_all_one <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">if</span> string<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">:</span>\n        count_to_all_one <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">elif</span> string<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span>\n        count_to_all_zero <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n        <span class=\"token keyword\">if</span> string<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> string<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> string<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">:</span>\n                count_to_all_one <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">if</span> string<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span>\n                count_to_all_zero <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>count_to_all_one<span class=\"token punctuation\">,</span> count_to_all_zero<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"주의점\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98%EC%A0%90\" aria-label=\"주의점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>*주의점:</h3>\n<blockquote>\n<p>문자열의 첫 문자는 이전 문자열의 원소와 비교하지 못하기 때문에 for문이 시작하기 전에 카운트를 해줘야 한다.</p>\n</blockquote>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%98%88%EC%A0%9C\">예제:</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%91%EA%B7%BC%EB%B2%95\">접근법:</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%92%80%EC%9D%B4%EB%B2%95\">풀이법:</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B5%AC%EA%B0%84%EC%9D%84-%EB%82%98%EB%88%84%EA%B3%A0-%EB%92%A4%EC%A7%91%EB%8A%94-%ED%9A%9F%EC%88%98%EB%A5%BC-%EC%B9%B4%EC%9A%B4%ED%8A%B8%ED%95%A0-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C\">그렇다면 어떻게 구간을 나누고, 뒤집는 횟수를 카운트할 수 있을까?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#python-code\">python code:</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A3%BC%EC%9D%98%EC%A0%90\">*주의점:</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 14, 2021","title":"문자열 뒤집기","categories":"알고리즘","author":"장희성","emoji":"✏️"},"fields":{"slug":"/reverse-string/"}},"site":{"siteMetadata":{"siteUrl":"https://heesungjang.github.io","comments":{"utterances":{"repo":"heesungjang/heesungjang.github.io"}}}}},"pageContext":{"slug":"/list-prime-number/","nextSlug":"","prevSlug":"/reverse-string/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}